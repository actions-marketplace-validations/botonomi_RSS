<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
<title>Help Wanted</title>
<description>Help Wanted Issues</description>
<link>https://lbonanomi.github.io/workspace/feed.xml</link>
<item>	<title>Move from AppVeyor to GitHub Actions</title>
	<link>https://github.com/github/certstore/issues/19</link>
	<description><![CDATA[ <p>This file should be migrated to GitHub Actions: https://github.com/github/certstore/blob/main/.appveyor.yml"</p> ]]></description>
</item>
<item>	<title>license yaml format issue</title>
	<link>https://github.com/github/choosealicense.com/issues/758</link>
	<description><![CDATA[ <p>The <code>using</code> part of the license.txt looks weird to me. It’s an array of single-element map like this<br><code>yaml<br>using:<br>  - youtube-dl: https://github.com/rg3/youtube-dl/blob/master/LICENSE<br>  - kakoune: https://github.com/mawww/kakoune/blob/master/UNLICENSE<br>  - RDF.rb: https://github.com/ruby-rdf/rdf/blob/master/UNLICENSE<br></code><br>why not just use a single map like this<br><code>yaml<br>using:<br>  youtube-dl: https://github.com/rg3/youtube-dl/blob/master/LICENSE<br>  kakoune: https://github.com/mawww/kakoune/blob/master/UNLICENSE<br>  RDF.rb: https://github.com/ruby-rdf/rdf/blob/master/UNLICENSE<br></code><br>or an array of structered map<br><code>yaml<br>using:<br>  - name: youtube-dl<br>    url: https://github.com/rg3/youtube-dl/blob/master/LICENSE<br>  - name: kakoune<br>    url: https://github.com/mawww/kakoune/blob/master/UNLICENSE<br>  - name: RDF.rb<br>    url: https://github.com/ruby-rdf/rdf/blob/master/UNLICENSE<br></code><br>It makes the deserialise code boilerplate, for e.g in Rust I have to declare this field like <br><code>Rust<br>using: Option&lt;Vec&lt;HashMap&lt;String, String&gt;&gt;&gt;,<br></code><br>When using this <code>using</code> field, I have to iterate the vector, during which I have to iterate the single-element map!<br>In other formats, it would be<br><code>Rust<br>using: Option&lt;HashMap&lt;String, String&gt;&gt;,<br></code><br>or<br><code>Rust<br>using: Option&lt;Vec&lt;SomeStruct&gt;&gt;,<br></code>"</p> ]]></description>
</item>
<item>	<title>Test that license texts match SPDX plain license texts</title>
	<link>https://github.com/github/choosealicense.com/issues/636</link>
	<description><![CDATA[ <p>We should have a test that each license text in <code>_licenses</code> is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license<br><br>&gt; The text of the license should match the corresponding text found in <a href="https://github.com/spdx/license-list-data/blob/master/text/">spdx/license-list-data</a>. If there are errors there, please fix them in <a href="https://github.com/spdx/license-list-XML">spdx/license-list-XML</a> (from which the plain text version is generated) so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.<br><br>The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies."</p> ]]></description>
</item>
<item>	<title>I18N</title>
	<link>https://github.com/github/choosealicense.com/issues/68</link>
	<description><![CDATA[ <p>Would love to see about baking in I18N support to choosealicense.com proper. See #67 and #62nnWe already have the bulk of the strings in a single file (<code>_config.yml</code>), so it should just be a matter of abstracting out some of our variables, as far as I can tell.nnWould love to take this on starting in August if there’s interest. Would be a great exercise to set a standard for Jekyll L10N, and can iterate on some of the lessons lea<br>ed form https://github.com/CMSgov/healthcare.gov.nn@parkr any interest?n@dhcole any insight / words of wisdom?n"</p> ]]></description>
</item>
<item>	<title>Support for locally present bundles</title>
	<link>https://github.com/github/codeql-action/issues/154</link>
	<description><![CDATA[ <p>I would like to run code-scanning with a custom code-scanning bundle<br>that already is present on my local disk. I can currently do that by<br>making the following hack:<br><br>### 1 Install bundle in tool cache:<br><br>Use <code>toolCache.cacheDir</code> to install the bundle with a specially crafted ID:<br><br><code>js<br>tc.cacheDir(localBundlePath, 'CodeQL', "0.0.0-XXX-DUMMY-BUNDLE-ID");<br></code><br><br>### 2 Convince codeql to look in the tool cache:<br><br>The codeql action is then invoked with a dummy URL that will make codeql.ts lookup the bundle with the specially crafted ID:<br><br><code>yaml<br>        ...<br>        tools: dummy://codeql-bundle-XXX-DUMMY-BUNDLE-ID/dummy<br>        ...<br></code><br><br>—<br><br>This works, but I would like a more reliable solution. I am not sure<br>what the best approach is for supporting my use case, but I am happy<br>to look into implementing a suggestion.<br>"</p> ]]></description>
</item>
<item>	<title>TODO: Configure caching for fast building on CI</title>
	<link>https://github.com/github/government.github.com/issues/750</link>
	<description><![CDATA[ <p>Description and details here: https://github.com/gjtorikian/html-proofer#configuring-caching and https://github.com/gjtorikian/html-proofer#caching-with-travis"</p> ]]></description>
</item>
<item>	<title>Dockerfile support</title>
	<link>https://github.com/github/licensed/issues/272</link>
	<description><![CDATA[ <p>Would be great if <code>licensed</code> supported analyzing <code>Dockerfile</code>s and what is installed there to track all dependencies of a project!"</p> ]]></description>
</item>
<item>	<title>List of languages without a colour</title>
	<link>https://github.com/github/linguist/issues/5003</link>
	<description><![CDATA[ <p>Continuing from #4506. 49<item>	<title>Proposal: Make triaging more welcoming to external contributors</title>
	<link>https://github.com/github/linguist/issues/4982</link>
	<description><![CDATA[ <p>I’ve contributed on and off to linguist since 2017 and over time I’ve observed a quite frustrating patte<br> with issues and pull requests: legitimate issues and pull requests get labelled quite quickly as stale (30 days) and then closed (60), with no further option to reopen them.<br><br>I understand that this workflow may be convenient for maintainers, but it seems discouraging in a few ways:<br><br>- For a casual contributor, 60 days may be a too strict deadline for a Pull Request. It is quite frustrating to come back at a Pull Request a couple of months later (holidays or whatever reason for inactivity) to find you need to create a new one. <br><br>- For issues, closing an issue just because there is no PR in 60 days hides them from people who are looking for active ways to contribute. It also tends to promote filing duplicates without reading any of the previous discussion.<br><br>I think this could be improved in a way that promotes exte<br>al contributions while maintaining convenience for maintainers. There are probably many good ways, but I’m thinking about something along the following lines:<br><br>- Pull Requests: Do not close them automatically (or extend the grace period). There’s 73 PRs closed as Stale over a ~2 years period. A few of them were mostly ready, so the project could probably benefit from keeping them alive for a while.<br><br>- Issues: Once an issue is confirmed to be a valid bug or feature request, add a label (e.g. <code>Help Wanted</code>) and exclude it from the Stale workflow. This label would be a great way for people looking to contribute, while making it clear to the reporter that it needs someone to work on it. Keeping them open and clearly marked also makes them more easily discoverable by users experiencing the same issue, so they can contribute to the discussion.<br><br>What do you think?"</p> ]]></description>
</item>
<item>	<title>Investigate semantic-rust macro tests</title>
	<link>https://github.com/github/semantic/issues/553</link>
	<description><![CDATA[ <p><span class="citation" data-cites="p-alik">@p-alik</span> has graciously added the <code>semantic-rust</code> package but we’ve had to exclude some macro corpus tests due to parsing issues.<br><br>See https://github.com/github/semantic/pull/551 for details."</p> ]]></description>
</item>
<item>	<title>Move from Travis CI and Appveyor to GitHub Actions</title>
	<link>https://github.com/github/smimesign/issues/71</link>
	<description><![CDATA[ <p>The following files are historical artifacts:<br><br>- Travis CI for macOS builds: https://github.com/github/smimesign/blob/main/.travis.yml<br>- AppVeyor for Windows builds: https://github.com/github/smimesign/blob/main/.appveyor.yml<br><br>In fact, the macOS build doesn’t upload releases anymore.<br><br>Both of these should be moved to GitHub Actions. I have a test branch for macOS at:<br>https://github.com/github/smimesign/tree/macos-build<br><br>This is not a high priority for us, but if someone took the time to migrate and debug the CI files for GH Actions it would help us maintain this project!"</p> ]]></description>
</item>
<item>	<title>Don't connect to kext when invoked with CLI args</title>
	<link>https://github.com/github/SoftU2F/issues/39</link>
	<description><![CDATA[ <p>We try to connect to the kext when the app starts (<a href="https://github.com/github/SoftU2F/blob/45825a5bd6e6bad7ae9bd681c8584cbcb6e7fb7b/SoftU2FTool/U2FHID.swift#L24">code</a>). This also happens when the app is launched from the command line (Eg. for deleting/listing registrations). If the app is already running in the background we’ll get an error because the kext only allows one connection. This error is surfaced to the user, which is confusing. We should not connect to the kext unless we need to."</p> ]]></description>
</item>
<item>	<title>Default to main and then master</title>
	<link>https://github.com/github/super-linter/issues/698</link>
	<description><![CDATA[ <p><strong>Is your feature request related to a problem? Please describe.</strong><br><br>Following the guidance of github, many developers are moving to <code>main</code> as their default branch. Saving developers from the very small hindrance of using <code>DEFAULT_BRANCH: main</code> would contribute to smoothing the transition.<br><br><strong>Describe the solution you’d like</strong><br><br>The default branch should be <code>main</code>. If it does not exist, use <code>master</code>, given that many repositories will continue using this name."</p> ]]></description>
</item>
<item>	<title>Support linting infrastructure-as-code descriptors with Checkov</title>
	<link>https://github.com/github/super-linter/issues/694</link>
	<description><![CDATA[ <p><strong>Is your feature request related to a problem? Please describe.</strong><br>https://github.com/bridgecrewio/checkov is a tool to check infrastructure-as-code descriptors. <code>It scans cloud infrastructure provisioned using Terraform, Cloudformation, Kube<br>etes, Serverless or ARM Templates and detects security and compliance misconfigurations.</code><br><br><strong>Describe the solution you’d like</strong><br>Support <code>checkov</code>.<br><br><strong>Describe alte<br>atives you’ve considered</strong><br>N/A<br><br><strong>Additional context</strong><br>N/A<br><br><strong>Note</strong><br>If this is a request to add a new language, after submitting this issue check out <a href="https://github.com/github/super-linter/wiki/Adding-new-language-support">the wiki</a> for more info on how to accomplish that.<br>"</p> ]]></description>
</item>
<item>	<title>Support scanning Terraform with tfsec</title>
	<link>https://github.com/github/super-linter/issues/693</link>
	<description><![CDATA[ <p><strong>Is your feature request related to a problem? Please describe.</strong><br>https://github.com/liamg/tfsec is a popular (more than TerraScan at least!) security-oriented linter for Terraform.<br><br><strong>Describe the solution you’d like</strong><br>Support tfsec as one of the linters that super-linter ships.<br><br><strong>Describe alte<br>atives you’ve considered</strong><br>N/A<br><br><strong>Additional context</strong><br>N/A<br><br><strong>Note</strong><br>If this is a request to add a new language, after submitting this issue check out <a href="https://github.com/github/super-linter/wiki/Adding-new-language-support">the wiki</a> for more info on how to accomplish that.<br>"</p> ]]></description>
</item>
<item>	<title>Bazel Support</title>
	<link>https://github.com/github/super-linter/issues/393</link>
	<description><![CDATA[ <p>bazel linter<br><br>- <a href="https://github.com/bazelbuild/buildtools/blob/master/buildifier/README.md">buildifier</a>"</p> ]]></description>
</item>
<item>	<title>Scala Support</title>
	<link>https://github.com/github/super-linter/issues/392</link>
	<description><![CDATA[ <p>Scala linter support.<br><br>Choices are<br>- <a href="https://github.com/scalacenter/scalafix">scalafix</a><br>- <a href="https://github.com/scalameta/scalafmt">scalafmt</a><br>- <a href="https://github.com/scalastyle/scalastyle">scalastyle</a><br>- <a href="https://github.com/wartremover/wartremover">wartremover</a>"</p> ]]></description>
</item>
<item>	<title>Scala Support</title>
	<link>https://github.com/github/super-linter/issues/392</link>
	<description><![CDATA[ <p>Scala linter support.<br><br>Choices are<br>- <a href="https://github.com/scalacenter/scalafix">scalafix</a><br>- <a href="https://github.com/scalameta/scalafmt">scalafmt</a><br>- <a href="https://github.com/scalastyle/scalastyle">scalastyle</a><br>- <a href="https://github.com/wartremover/wartremover">wartremover</a>"</p> ]]></description>
</item>
<item>	<title>Make previews controller extensible </title>
	<link>https://github.com/github/view_component/issues/434</link>
	<description><![CDATA[ <h2 id="feature-request<br><br>make-the-previews-controller-to-be-extensible-by-allowing-users-to-add-authentication-authorization-before-actions-or-anything-that-the-end-user-would-need-to-meet-their-needs.-<br><br>-motivation<br>it-all-started-in-discussion-412-<br>jonspalmer-came-up-with-a-good-suggestion-which-is-to-copy-devises-parent-class-feature.-it-will-enable-devs-to-set-up-a-parent-class-if-needed.-<br><br>httpsgithub.comgithubview_componentdiscussions412discussioncomment-41084<br><br>">Feature request<br><!-- Provide a summary of the behavior. --><br>Make the previews controller to be extensible by allowing users to add authentication, authorization, before actions, or anything that the end user would need to meet their needs. <br><br>### Motivation<br>It all started in discussion #412 <br>@jonspalmer came up with a good suggestion, which is to copy Devise’s “parent class” feature. It will enable devs to set up a parent class if needed. <br><br>https://github.com/github/view_component/discussions/412#discussioncomment-41084<br><!-- What would you like to do with this feature? Can you provide<br>context or references to similar behavior in other libraries? --><br>"</h2> ]]></description>
</item>
<item>	<title>ActiveSupport::Notifications instrumentation</title>
	<link>https://github.com/github/view_component/issues/427</link>
	<description><![CDATA[ <h2 id="feature-request<br>have-activesupportnotifications-instrumentation.<br><br>-motivation<br><br>it-may-be-nice-to-have-some-information-about-time-used-to-render-the-component.-like-actionview-does-in-developer-server-logs.<br><br>examples<br>--simple-component-rendering-rendered-buttoncomponent-duration-1.2ms-allocations-123<br>--collection-rendering-rendered-collection-of-buttoncomponent-10-times-duration-1.2ms-allocations-123<br><br><br>started-get-postsaa147930-7749-4d52-a44b-29548e093447edit-for-127.0.0.1-at-2020-07-29-010919-0200<br>processing-by-postscontrolleredit-as-html<br>-parameters-idaa147930-7749-4d52-a44b-29548e093447<br>-post-load-2.0ms-select-posts.-from-posts-where-posts.id-1-limit-2-id-aa147930-7749-4d52-a44b-29548e093447-limit-1<br>-appcontrollersposts_controller.rb51in-set_post<br>-rendering-postsedit.html.slim-within-layoutsapplication<br>-rendered-buttoncomponent-duration-1.2ms-allocations-123<br>-rendered-posts_form.html.slim-duration-6.3ms-allocations-3331<br>-rendered-postsedit.html.slim-within-layoutsapplication-duration-9.4ms-allocations-5561<br>completed-200-ok-in-46ms-views-26.1ms-activerecord-2.3ms-allocations-19197<br><br>">Feature request<br>Have <code>ActiveSupport::Notifications</code> instrumentation.<br><br>### Motivation<br><br>It may be nice to have some information about time used to render the component. Like <code>ActionView</code> does in developer server logs.<br><br>Examples:<br>- simple component rendering <code>Rendered ButtonComponent (Duration: 1.2ms | Allocations: 123)</code><br>- collection rendering <code>Rendered collection of ButtonComponent [10 times] (Duration: 1.2ms | Allocations: 123)</code><br><br><code><br>Started GET "/posts/aa147930-7749-4d52-a44b-29548e093447/edit" for 127.0.0.1 at 2020-07-29 01:09:19 +0200<br>Processing by PostsController#edit as HTML<br>  Parameters: {"id"=&gt;"aa147930-7749-4d52-a44b-29548e093447"}<br>  Post Load (2.0ms)  SELECT "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2  [["id", "aa147930-7749-4d52-a44b-29548e093447"], ["LIMIT", 1]]<br>  ↳ app/controllers/posts_controller.rb:51:in `set_post'<br>  Rendering posts/edit.html.slim within layouts/application<br>  Rendered ButtonComponent (Duration: 1.2ms | Allocations: 123)<br>  Rendered posts/_form.html.slim (Duration: 6.3ms | Allocations: 3331)<br>  Rendered posts/edit.html.slim within layouts/application (Duration: 9.4ms | Allocations: 5561)<br>Completed 200 OK in 46ms (Views: 26.1ms | ActiveRecord: 2.3ms | Allocations: 19197)<br></code><br>"</h2> ]]></description>
</item>
<item>	<title>Access request within SlotComponent instance</title>
	<link>https://github.com/github/view_component/issues/409</link>
	<description><![CDATA[ <h2 id="feature-request<br>httpsgithub.comgithubview_componentpull59-added-context-and-access-to-the-request-object-within-the-component-however-this-does-not-seem-to-extend-to-slotcomponent.<br>i-would-like-to-propose-this-change-to-slotcomponents-also-<br><br>-motivation<br><br>i-would-like-to-use-an-active-nav-anchor-tag-in-a-navitem-slot-within-a-navbarcomponent-by-using-the-request-to-determine-the-current_page-currently-i-having-to-work-around-this-by-wrapping-the-slotcomponent-instance-in-a-method-in-the-parent-component-and-calling-the-method-from-the-template.<br>to-me-the-slotcomponents-should-have-access-to-the-same-helpers-and-view-context-that-the-parent-components-currently-provide.<br><br>i-will-attempt-a-pr-of-this-myself-if-theres-acceptance-and-motivation-to-do-so.">Feature request<br>https://github.com/github/view_component/pull/59 added context and access to the request object within the component, however this does not seem to extend to SlotComponent.<br>I would like to propose this change to SlotComponents also <br><br>### Motivation<br><br>I would like to use an active nav anchor tag in a NavItem slot within a NavBarComponent, by using the request to determine the <code>current_page?</code> Currently I having to work around this by wrapping the SlotComponent instance in a method in the parent Component and calling the method from the template.<br>To me the SlotComponents should have access to the same helpers and view context that the parent components currently provide.<br><br>I will attempt a PR of this myself if there’s acceptance and motivation to do so. "</h2> ]]></description>
</item>
<item>	<title>Add failing tests for rendering with layouts</title>
	<link>https://github.com/github/view_component/pull/395</link>
	<description><![CDATA[ <!-- See https://github.com/github/view_component/blob/master/CONTRIBUTING.md#submitting-a-pull-request  -->
<p><br><br>### Summary<br><br><!-- Provide a general description of the code changes in your pull<br>request... were there any bugs you had fixed? If so, mention them. If<br>these bugs have open GitHub issues, be sure to tag them here as well,<br>to keep the conversation linked together. --><br>This is a merge request for discussing a possible API for implementing #391 <br><br>I would have liked to have layouts included by default with <code>render</code>. I would understand if that is deemed an API break and a alte<br>ative needs to be determined.<br><br>Additionally, I have added a test that checks the view context is shared between the layout and the component.<br><br>### Other Information<br><br><!-- If there's anything else that's important and relevant to your pull<br>request, mention that information here. This could include<br>benchmarks, or other information.<br><br>If you are updating any of the CHANGELOG files or are asked to update the<br>CHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file. --><br>"</p> ]]></description>
</item>
<item>	<title>Support multiple views</title>
	<link>https://github.com/github/view_component/issues/387</link>
	<description><![CDATA[ <h2 id="feature-request<br><br><br>allow-refactoring-small-view-parts-into-a-separate-view-and-be-able-to-render-them-into-the-template.-these-views-should-not-be-available-outside-the-component.<br><br><br>appcomponentsmy_componentmy_component.html.erb<br>appcomponentsmy_componenta_part.html.erb<br><br><br>erb<br>-my_component.html.erb-<br>-render-a_part-<br><br><br>-motivation<br><br><br><br>sometimes-it-is-useful-to-separate-a-sub-component-from-the-component.-for-example-if-i-want-to-render-a-popover-with-extra-info-about-a-particular-model-i-would-want-to-extract-that-popover-into-a-separate-view.-<br><br>alte<br>ative-solutions<br><br>1.-extract-a-new-component.-because-the-popover-is-not-a-generic-one-to-be-used-in-other-parts-of-the-application-it-doesnt-make-much-sense-to-create-a-now-public-component-for-it.<br>2.-use-content_for.-this-is-not-suitable-if-the-partial-needs-to-take-arguments.-in-my-example-it-wouldnt-work-if-im-displaying-a-list-of-models-and-i-want-to-show-the-popover-for-each-model.<br><br>prior-art<br>actionview-does-support-partials-of-course.<br>cells-does-allow-multiple-views-per-cell-and-allows-using-render-view-a_part.<br><br>-possible-solutions-i-see<br><br>1.-provide-a-method-that-prefixes-the-component-dir-and-then-goes-on-to-call-render-template-with-the-full-path.-i-would-suspect-this-is-relatively-slow-given-that-render-is-slow-in-actionview.-<br>2.-precompile-all-the-templates-into-methods-with-a-reserved-prefix-and-allow-calling-them-from-the-view.-for-example-using-extra_views_view_name.<br><br>">Feature request<br><!-- Provide a summary of the behavior. --><br><br>Allow refactoring small view parts into a separate view, and be able to <code>render</code> them into the template. These views should not be available outside the component.<br><br><code><br>app/components/my_component/my_component.html.erb<br>app/components/my_component/a_part.html.erb<br></code><br><br><code>erb<br>&lt;<item>	<title>Fix rendering of components that utilize `capture` in a parent view context</title>
	<link>https://github.com/github/view_component/pull/240</link>
	<description><![CDATA[ <p>In Rails, when you create a form it saves a reference to the current<br>template object that is rendering the form. When you render a form<br>builder helper method, like <code>form.label</code> inside of a child component the<br>template object will be the original template object from where the form<br>builder was instantiated.<br><br>This means in cases where we pass a block to a form builder helper the<br><code>@output_buffer</code> is the parent component’s output buffer. So when that<br>buffer is overridden via <code>.capture</code> it’s setting the parent component’s<br><code>@output_buffer</code> to a new, temporary buffer but it doesn’t change the<br>child component that is actually rendering’s <code>@output_buffer</code>. This<br>means the block is executed in the context of the child components<br>actual <code>@output_buffer</code> and immediately writes to the buffer. Since<br><code>capture</code> had nothing written to the temporary buffer, it retu<br>s the<br>value of the block call and then inserts that into the parent<br>component’s <code>@output_buffer</code>.<br><br>This resolves the issue by monkey patching <code>ActionView::Base</code> to support<br>a new <code>child_component</code> attribute and overriding <code>output_buffer=</code> to set<br>its <code>child_component</code>s output_buffer to whatever <code>output_buffer</code> is set<br>to. With that in place, when <code>capture</code> is called, then #output_buffer=`<br>is called which will update the child component’s output buffer to the new <br>temporary buffer correctly."</p> ]]></description>
</item>
<item>	<title>OSD level scale invisible</title>
	<link>https://github.com/ubuntu/yaru/issues/2214</link>
	<description><![CDATA[ <p>Hi there, first of all, thanks for this very nice theme.<br><br>I’m using Yaru 20.04 on openSUSE Tumbleweed and Leap 15.2 with Mate 1.24.0. There is a problem where the OSD horizontal fine-grained level/scale is invisible. Maybe some code could be borrowed from Numix, as it looks perfect under Numix.<br><br>————–<br><br>Yaru (light and normal all behave the same):<br><br><img src="https://user-images.githubusercontent.com/2692138/85305326-880c4b80-b472-11ea-8d15-98d63fb4b3c6.png" alt="Screenshot at 2020-06-22 10-14-21" /><br><br>———————<br><br>Numix:<br><br><img src="https://user-images.githubusercontent.com/2692138/85305349-90fd1d00-b472-11ea-9db7-e0e1611c0b26.png" alt="Screenshot at 2020-06-22 10-14-35" /><br>"</p> ]]></description>
</item>
<item>	<title>[Bionic] Check mark (✓) is invisible in Firefox context menu</title>
	<link>https://github.com/ubuntu/yaru/issues/2064</link>
	<description><![CDATA[ <h3 id="steps-to-see-the-issue<br>1.-open-firefox-and-go-to-a-text-field<br>2.-right-click-in-a-text-field-and-select-check-spelling<br>3.-you-should-see-a-check-mark-beside-check-spelling<br>4.-the-check-mark-is-invisible<br><br>-software-that-presents-the-issue<br>--os-ubuntu-18.04<br>--app-firefox<br>--version-74<br><br>-yaru-version<br>-snap-info-communitheme<br>snap-id-yd6cispif6tef3zej0cqsoeg9rg2vkri<br>tracking-latestedge<br>refresh-date-11-days-ago-at-1912-cet<br>channels<br>-stable-0.1-2019-03-13-1768-16mb--<br>-candidate-<br>-beta-<br>-edge-29.180-2020-03-03-1970-18mb--<br>installed-29.180-1970-18mb--<br>">Steps to see the issue<br>1. Open Firefox and go to a text field<br>2. Right-click in a text field and select “Check Spelling”<br>3. You should see a check mark (✓) beside “Check Spelling”<br>4. The check mark is invisible<br><br>### Software that presents the issue<br>- OS: Ubuntu 18.04<br>- App: Firefox<br>- Version: 74<br><br>### Yaru version<br>$ snap info communitheme<br>snap-id: Yd6CISPIf6tEf3ZEJ0cqSoEg9rG2VkRi<br>tracking: latest/edge<br>refresh-date: 11 days ago, at 19:12 CET<br>channels:<br> stable: 0.1 2019-03-13 (1768) 16MB -<br> candidate: ↑ <br> beta: ↑ <br> edge: 29.180 2020-03-03 (1970) 18MB -<br>installed: 29.180 (1970) 18MB -<br>"</h3> ]]></description>
</item>

</channel>
</rss>

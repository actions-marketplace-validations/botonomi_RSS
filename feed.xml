<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
<title>Help Wanted</title>
<description>Help Wanted Issues</description>
	<link>https://lbonanomi.github.io/workspace/feed.xml</link>

	<item>	
		<title>Support cloning a gist (just like cloning a repo)</title>
		<link>https://github.com/cli/cli/issues/2115</link>
		<description><![CDATA[ <pre><p>In https://github.com/cli/cli/pull/1699#issue-486709880, <span class="citation" data-cites="vilmibm">@vilmibm</span> notes a limitation:</p>
<blockquote>
<p>no affordance for cloning a gist to do more advance editing</p>
</blockquote>
<p>I’d like to be able to clone a gist, just like I can clone a repo. This is all that’s still needed in order to be able to use <code>gh</code> to enumerate and backup/export (clone) all owned gists.</p></pre> ]]></description>
</item>
	
<item>	<title>Sign `gh.exe` binaries in addition to signing the MSI installer</title>
	<link>https://github.com/cli/cli/issues/2111</link>
	<description><![CDATA[ <pre><p>This would help identify Windows binaries that were officially packaged by us vs. ones that might have been modified/corrupted. Right now, we only do signing with the MSI installer.</p>
<p>Ref. https://github.com/cli/cli/issues/2064
Followup to #148</p></pre> ]]></description>
</item>
	
<item>	<title>Ask to git init on repo create </title>
	<link>https://github.com/cli/cli/issues/2099</link>
	<description><![CDATA[ <pre><h3 id="describe-the-feature-or-problem-youd-like-to-solve">Describe the feature or problem you’d like to solve</h3>
<p>If you run <code>gh repo create</code> in a folder that isn’t initialized with git the command fails.</p>
<h3 id="proposed-solution">Proposed solution</h3>
<p>Instead of failing the user would be asked if they want to initialize the current folder a git repo.</p>
<h3 id="additional-context">Additional context</h3>
<p>I would love to take up the implementation of this! The <a href="https://github.com/go-git/go-git">go-git</a> module seems like the easiest way to implement this but it is a big dep. Should we just run an exec command or is there some other way to do it?</p>
<p>p.s. thank you for making this awesome cli :)</p></pre> ]]></description>
</item>
	
	
	
	
	
	
	
	
	
	
<item>	
	<title>:gh release create: Make the error message more descriptive, if &amp;lt;tag&amp;gt; isn't passed.</title>
	<link>https://github.com/cli/cli/issues/2327</link>
	<description><![CDATA[ <pre><h3 id="describe-the-feature-or-problem-youd-like-to-solve">Describe the feature or problem you’d like to solve</h3>
<p>When <code>gh release create</code> is run, without any arguments, the output received is: <code>requires at least 1 arg(s), only received 0</code>. This is not helpful to a user who is not aware of the command (until <code>gh release create --help</code>).</p>
<h3 id="proposed-solution">Proposed solution</h3>
<p>Instead of the not-so-useful message, a user can receive a message like: <code>could not create: no tag name provided</code>. This will help to describe the user about the command at command execution time, rather than using <code>gh release create --help</code>.</p></pre> ]]></description>
</item>
	
<item>	
	<title>when GITHUB_TOKEN is set, print better messaging during gh auth login</title>
	<link>https://github.com/cli/cli/issues/2304</link>
	<description><![CDATA[ <pre><p>Currently we let a user get through two prompts of <code>gh auth login</code> when GITHUB_TOKEN is set, then unceremoniously tell them that the token is read-only.</p>
<p>We should proactively notice that situation when <code>gh auth login</code> is run and give clear messaging about unsetting the token in order to use the command.</p>
<p>Initially we thought only power users would be using GITHUB_TOKEN as an opt-in choice, making this fine; but in Codespaces GITHUB_TOKEN is being set without users ever knowing about it.﻿</p></pre> ]]></description>
</item>

<item>	
	<title>support gitflags in gh repo fork</title>
	<link>https://github.com/cli/cli/issues/2236</link>
	<description><![CDATA[ <pre><h3 id="describe-the-feature-or-problem-youd-like-to-solve">Describe the feature or problem you’d like to solve</h3>
<p>I want to create a fork and then clone it locally shallowly. This is not possible since <code>gh repo fork --clone</code> does not provide any options and does not return the repo name in a clean way.</p>
<h3 id="proposed-solution">Proposed solution</h3>
<div class="sourceCode" id="cb1"><pre class="sourceCode sh"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1"></a><span class="ex">gh</span> repo clone -- --depth 1 --single-branch <span class="va">$(</span><span class="ex">gh</span> repo fork --clone=false<span class="va">)</span></span></code></pre></div>
<p>or accept gitflags <a href="https://cli.github.com/manual/gh_repo_clone">like <code>gh repo clone</code> does</a></p>
<div class="sourceCode" id="cb2"><pre class="sourceCode sh"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1"></a><span class="ex">gh</span> repo fork --clone -- --depth 1 --single-branch</span></code></pre></div>
<h2 id="how-will-it-benefit-cli-and-its-users">How will it benefit CLI and its users?</h2>
<p>This speeds up the cloning progress. Adding support for gitflags will also align <code>repo fork</code> with <code>repo clone</code></p></pre> ]]></description>
</item>
	
	
</channel>
</rss>
